{
    "pipes": [],
    "interfaces": [
        {
            "name": "IDiva",
            "id": "interface-IDiva-5b95b369657991c0f33e8d97e9ee867a",
            "file": "src/app/widgets/tram/interfaces/dvb.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Stop {\r\n  name: string,\r\n  monitor: IMonitor[]\r\n}\r\n\r\nexport interface IMonitor {\r\n  arrivalTime: Date;\r\n  scheduledTime: Date;\r\n  id: string;\r\n  line: string;\r\n  direction: string;\r\n  platform?: IPlatform;\r\n  arrivalTimeRelative: number;\r\n  scheduledTimeRelative: number;\r\n  delayTime: number;\r\n  state: string;\r\n  mode?: IMode;\r\n  diva?: IDiva;\r\n}\r\n\r\nexport interface IPlatform {\r\n  name: string;\r\n  type: string;\r\n}\r\n\r\nexport interface IMode {\r\n  title: string;\r\n  name: string;\r\n  iconUrl?: string;\r\n}\r\n\r\nexport interface IDiva {\r\n  number: number;\r\n  network?: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "network",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "number",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 33
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        },
        {
            "name": "IMode",
            "id": "interface-IMode-5b95b369657991c0f33e8d97e9ee867a",
            "file": "src/app/widgets/tram/interfaces/dvb.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Stop {\r\n  name: string,\r\n  monitor: IMonitor[]\r\n}\r\n\r\nexport interface IMonitor {\r\n  arrivalTime: Date;\r\n  scheduledTime: Date;\r\n  id: string;\r\n  line: string;\r\n  direction: string;\r\n  platform?: IPlatform;\r\n  arrivalTimeRelative: number;\r\n  scheduledTimeRelative: number;\r\n  delayTime: number;\r\n  state: string;\r\n  mode?: IMode;\r\n  diva?: IDiva;\r\n}\r\n\r\nexport interface IPlatform {\r\n  name: string;\r\n  type: string;\r\n}\r\n\r\nexport interface IMode {\r\n  title: string;\r\n  name: string;\r\n  iconUrl?: string;\r\n}\r\n\r\nexport interface IDiva {\r\n  number: number;\r\n  network?: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "iconUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 27
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        },
        {
            "name": "IMonitor",
            "id": "interface-IMonitor-5b95b369657991c0f33e8d97e9ee867a",
            "file": "src/app/widgets/tram/interfaces/dvb.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Stop {\r\n  name: string,\r\n  monitor: IMonitor[]\r\n}\r\n\r\nexport interface IMonitor {\r\n  arrivalTime: Date;\r\n  scheduledTime: Date;\r\n  id: string;\r\n  line: string;\r\n  direction: string;\r\n  platform?: IPlatform;\r\n  arrivalTimeRelative: number;\r\n  scheduledTimeRelative: number;\r\n  delayTime: number;\r\n  state: string;\r\n  mode?: IMode;\r\n  diva?: IDiva;\r\n}\r\n\r\nexport interface IPlatform {\r\n  name: string;\r\n  type: string;\r\n}\r\n\r\nexport interface IMode {\r\n  title: string;\r\n  name: string;\r\n  iconUrl?: string;\r\n}\r\n\r\nexport interface IDiva {\r\n  number: number;\r\n  network?: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "arrivalTime",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "arrivalTimeRelative",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "delayTime",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "direction",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "diva",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IDiva",
                    "optional": true,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "line",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "mode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IMode",
                    "optional": true,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "platform",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IPlatform",
                    "optional": true,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "scheduledTime",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "scheduledTimeRelative",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "state",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        },
        {
            "name": "IPlatform",
            "id": "interface-IPlatform-5b95b369657991c0f33e8d97e9ee867a",
            "file": "src/app/widgets/tram/interfaces/dvb.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Stop {\r\n  name: string,\r\n  monitor: IMonitor[]\r\n}\r\n\r\nexport interface IMonitor {\r\n  arrivalTime: Date;\r\n  scheduledTime: Date;\r\n  id: string;\r\n  line: string;\r\n  direction: string;\r\n  platform?: IPlatform;\r\n  arrivalTimeRelative: number;\r\n  scheduledTimeRelative: number;\r\n  delayTime: number;\r\n  state: string;\r\n  mode?: IMode;\r\n  diva?: IDiva;\r\n}\r\n\r\nexport interface IPlatform {\r\n  name: string;\r\n  type: string;\r\n}\r\n\r\nexport interface IMode {\r\n  title: string;\r\n  name: string;\r\n  iconUrl?: string;\r\n}\r\n\r\nexport interface IDiva {\r\n  number: number;\r\n  network?: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 23
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        },
        {
            "name": "Stop",
            "id": "interface-Stop-5b95b369657991c0f33e8d97e9ee867a",
            "file": "src/app/widgets/tram/interfaces/dvb.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Stop {\r\n  name: string,\r\n  monitor: IMonitor[]\r\n}\r\n\r\nexport interface IMonitor {\r\n  arrivalTime: Date;\r\n  scheduledTime: Date;\r\n  id: string;\r\n  line: string;\r\n  direction: string;\r\n  platform?: IPlatform;\r\n  arrivalTimeRelative: number;\r\n  scheduledTimeRelative: number;\r\n  delayTime: number;\r\n  state: string;\r\n  mode?: IMode;\r\n  diva?: IDiva;\r\n}\r\n\r\nexport interface IPlatform {\r\n  name: string;\r\n  type: string;\r\n}\r\n\r\nexport interface IMode {\r\n  title: string;\r\n  name: string;\r\n  iconUrl?: string;\r\n}\r\n\r\nexport interface IDiva {\r\n  number: number;\r\n  network?: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "monitor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IMonitor[]",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        },
        {
            "name": "SymbolData",
            "id": "interface-SymbolData-23d827a55ca850dd769d60f2927f21d5",
            "file": "src/app/widgets/stock/interfaces/symbol.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ChartDataSets } from \"chart.js\";\r\nimport { Color } from \"ng2-charts\";\r\n\r\nexport interface SymbolData {\r\n    name: string,\r\n    currentPrice: number,\r\n    relativeDifference: number,\r\n    prices: ChartDataSets[],\r\n    times: string[],\r\n    lineChartColors: Color[]\r\n}",
            "properties": [
                {
                    "name": "currentPrice",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "lineChartColors",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Color[]",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "prices",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChartDataSets[]",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "relativeDifference",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "times",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        },
        {
            "name": "WidgetConfig",
            "id": "interface-WidgetConfig-38c23383096f94f975a01e1ef944e89e",
            "file": "src/app/widget-config.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface WidgetConfig {\r\n  tram: {\r\n    stops: {\r\n      id:string,\r\n      name: string\r\n    }[],\r\n    timeOffset: number;\r\n  }\r\n  weather: {\r\n    latitude: number\r\n    longitude: number\r\n  }\r\n  stock: {\r\n    symbol: string,\r\n    interval: string,\r\n    range: string\r\n    mockData: boolean;\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "stock",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "tram",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "weather",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "AppConfig",
            "id": "injectable-AppConfig-fa2a43d4266947d6ef1afc0f59d31a1f",
            "file": "src/app/app-config.ts",
            "properties": [
                {
                    "name": "settings",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "WidgetConfig",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        124
                    ]
                }
            ],
            "methods": [
                {
                    "name": "load",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 9,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import {WidgetConfig} from \"./widget-config.model\";\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {Injectable} from \"@angular/core\";\r\n\r\n@Injectable()\r\nexport class AppConfig {\r\n  static settings: WidgetConfig;\r\n  constructor(private http: HttpClient) {}\r\n  load() {\r\n    const jsonFile = 'assets/widget-config.json';\r\n    return new Promise<void>((resolve, reject) => {\r\n      this.http.get(jsonFile).toPromise().then(response => {\r\n        AppConfig.settings = <WidgetConfig>response;\r\n        resolve();\r\n      }).catch((response: any) => {\r\n        reject(`Could not load file '${jsonFile}': ${JSON.stringify(response)}`);\r\n      });\r\n    });\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 7,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "StockAvService",
            "id": "injectable-StockAvService-1436ad7034e8134a70a3320d85953866",
            "file": "src/app/widgets/stock/service/stock.av.service.ts",
            "properties": [
                {
                    "name": "api",
                    "defaultValue": "`https://www.alphavantage.co`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getIntraday",
                    "args": [
                        {
                            "name": "symbol",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "symbol",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport {environment} from \"../../../../environments/environment\";\r\nimport {HttpClient} from \"@angular/common/http\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class StockAvService {\r\n\r\n  private api = `https://www.alphavantage.co`;\r\n\r\n  constructor(\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n  getIntraday(symbol: string) {\r\n    return this.http.get(\r\n      `${this.api}/query`,\r\n      {params: {\r\n        function: 'TIME_SERIES_INTRADAY',\r\n        symbol: symbol,\r\n        interval: '5min',\r\n        apikey: environment.alphavantageKey\r\n      }});\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "StockService",
            "id": "injectable-StockService-f0060f6008dbecfc1d03600b7500bcc2",
            "file": "src/app/widgets/stock/service/stock.service.ts",
            "properties": [
                {
                    "name": "api",
                    "defaultValue": "`https://yfapi.net`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getSpark",
                    "args": [
                        {
                            "name": "symbols",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "interval",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "'1d'"
                        },
                        {
                            "name": "range",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "'1mo'"
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "symbols",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "interval",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "'1d'",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "range",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "'1mo'",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getSparkMock",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport {environment} from \"../../../../environments/environment\";\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport { of } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class StockService {\r\n\r\n  private api = `https://yfapi.net`;\r\n\r\n  constructor(\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n  getSpark(symbols: string, interval = '1d', range = '1mo') {\r\n    return this.http.get(\r\n      `${this.api}/v8/finance/spark`,\r\n      {\r\n        headers: {\r\n          'x-api-key': environment.yahooApiKey\r\n        },\r\n        params: {\r\n          symbols: symbols,\r\n          interval: interval,\r\n          range: range\r\n        }\r\n      });\r\n  }\r\n\r\n  getSparkMock() {\r\n    return of({\r\n      \"MSFT\": {\r\n        \"previousClose\": null,\r\n        \"symbol\": \"MSFT\",\r\n        \"chartPreviousClose\": 252.46,\r\n        \"timestamp\": [\r\n          1620653400,\r\n          1620739800,\r\n          1620826200,\r\n          1620912600,\r\n          1620999000,\r\n          1621258200,\r\n          1621344600,\r\n          1621431000,\r\n          1621517400,\r\n          1621603800,\r\n          1621863000,\r\n          1621949400,\r\n          1622035800,\r\n          1622122200,\r\n          1622208600,\r\n          1622554200,\r\n          1622640600,\r\n          1622727000,\r\n          1622813400,\r\n          1623072600,\r\n          1623182402\r\n        ],\r\n        \"close\": [\r\n          247.18,\r\n          246.23,\r\n          239,\r\n          243.03,\r\n          248.15,\r\n          245.18,\r\n          243.08,\r\n          243.12,\r\n          246.48,\r\n          245.17,\r\n          250.78,\r\n          251.72,\r\n          251.49,\r\n          249.31,\r\n          249.68,\r\n          247.4,\r\n          247.3,\r\n          245.71,\r\n          250.79,\r\n          253.81,\r\n          252.57\r\n        ],\r\n        \"end\": null,\r\n        \"start\": null,\r\n        \"dataGranularity\": 300\r\n      },\r\n      \"AAPL\": {\r\n        \"previousClose\": null,\r\n        \"symbol\": \"AAPL\",\r\n        \"chartPreviousClose\": 130.21,\r\n        \"timestamp\": [\r\n          1620653400,\r\n          1620739800,\r\n          1620826200,\r\n          1620912600,\r\n          1620999000,\r\n          1621258200,\r\n          1621344600,\r\n          1621431000,\r\n          1621517400,\r\n          1621603800,\r\n          1621863000,\r\n          1621949400,\r\n          1622035800,\r\n          1622122200,\r\n          1622208600,\r\n          1622554200,\r\n          1622640600,\r\n          1622727000,\r\n          1622813400,\r\n          1623072600,\r\n          1623182403\r\n        ],\r\n        \"close\": [\r\n          126.85,\r\n          125.91,\r\n          122.77,\r\n          124.97,\r\n          127.45,\r\n          126.27,\r\n          124.85,\r\n          124.69,\r\n          127.31,\r\n          125.43,\r\n          127.1,\r\n          126.9,\r\n          126.85,\r\n          125.28,\r\n          124.61,\r\n          124.28,\r\n          125.06,\r\n          123.54,\r\n          125.89,\r\n          125.9,\r\n          126.74\r\n        ],\r\n        \"end\": null,\r\n        \"start\": null,\r\n        \"dataGranularity\": 300\r\n      }\r\n    })\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "WeatherService",
            "id": "injectable-WeatherService-3b2f23f63d14178e273c7071ce515102",
            "file": "src/app/widgets/weather/services/weather.service.ts",
            "properties": [
                {
                    "name": "api",
                    "defaultValue": "`https://api.darksky.net/forecast/${environment.darkSkyApiKey}`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getForecastWeather",
                    "args": [
                        {
                            "name": "latitude",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "longitude",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "latitude",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "longitude",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {environment} from \"../../../../environments/environment\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class WeatherService {\r\n\r\n  private api = `https://api.darksky.net/forecast/${environment.darkSkyApiKey}`;\r\n\r\n  constructor(\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n  getForecastWeather(latitude: number, longitude: number) {\r\n    return this.http.get(\r\n      `${this.api}/${latitude},${longitude}`,\r\n      {\r\n          params: {lang: 'de', units: 'si'}\r\n      });\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-3280aa7f86c8e91bcbe5ba7dd569a647",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "interval",
                    "defaultValue": "'1d'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "latitude",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "longitude",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "mockData",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "numberOfOpportunities",
                    "defaultValue": "4",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "range",
                    "defaultValue": "'1mo'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "stopDescriptions",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type[]",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "stops",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Stop[]",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "subscription",
                    "defaultValue": "new Subscription()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "symbol",
                    "defaultValue": "'NDAQ'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "timeOffset",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setTramSetup",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "ShortDestinations",
                    "args": [
                        {
                            "name": "monitor",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "longName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "shortName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nworkaround shorten of direction name\n",
                    "description": "<p>workaround shorten of direction name</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 2329,
                                "end": 2336,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "monitor"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 2323,
                                "end": 2328,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": ""
                        },
                        {
                            "name": {
                                "pos": 2350,
                                "end": 2358,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "longName"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 2344,
                                "end": 2349,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": ""
                        },
                        {
                            "name": {
                                "pos": 2372,
                                "end": 2381,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "shortName"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 2366,
                                "end": 2371,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": ""
                        },
                        {
                            "tagName": {
                                "pos": 2408,
                                "end": 2415,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "originalKeywordKind": 121,
                                "escapedText": "private"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "ShortDestinationsContains",
                    "args": [
                        {
                            "name": "monitor",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "contains",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "shortName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 95,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nworkaround shorten of direction name contains\n",
                    "description": "<p>workaround shorten of direction name contains</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 2836,
                                "end": 2843,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "monitor"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 2830,
                                "end": 2835,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": ""
                        },
                        {
                            "name": {
                                "pos": 2857,
                                "end": 2865,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "contains"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 2851,
                                "end": 2856,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": ""
                        },
                        {
                            "name": {
                                "pos": 2879,
                                "end": 2888,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "shortName"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 2873,
                                "end": 2878,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": ""
                        },
                        {
                            "tagName": {
                                "pos": 2915,
                                "end": 2922,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "originalKeywordKind": 121,
                                "escapedText": "private"
                            },
                            "comment": ""
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, OnDestroy, OnInit} from '@angular/core';\r\nimport * as dvb from \"dvbjs\";\r\nimport {AppConfig} from \"./app-config\";\r\nimport {Stop} from \"./widgets/tram/interfaces/dvb\";\r\nimport {IMonitor} from \"dvbjs\";\r\nimport {Subscription, timer} from \"rxjs\";\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent implements OnInit, OnDestroy{\r\n\r\n  public stops: Stop[] = [];\r\n  public stopDescriptions: {\r\n    id:string,\r\n    name: string\r\n  }[] = [];\r\n  public timeOffset = 0;\r\n  public numberOfOpportunities = 4;\r\n  public latitude: number = 0;\r\n  public longitude: number = 0;\r\n  public symbol: string = 'NDAQ';\r\n  public interval: string = '1d';\r\n  public range: string = '1mo';\r\n  public mockData: boolean = true;\r\n\r\n  public subscription: Subscription = new Subscription();\r\n\r\n  ngOnInit(): void {\r\n    timer(0,60000).subscribe(() => this.setTramSetup())\r\n\r\n    //setup settings\r\n    console.log('test', AppConfig.settings);\r\n    this.stopDescriptions = AppConfig.settings?.tram?.stops;\r\n    this.timeOffset = AppConfig.settings?.tram?.timeOffset;\r\n    this.latitude = AppConfig.settings?.weather?.latitude;\r\n    this.longitude = AppConfig.settings?.weather?.longitude;\r\n    this.symbol = AppConfig.settings?.stock?.symbol;\r\n    this.interval = AppConfig.settings?.stock?.interval;\r\n    this.range = AppConfig.settings?.stock?.range;\r\n    this.mockData = AppConfig.settings?.stock?.mockData;\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  private setTramSetup() {\r\n    const promises: any = []\r\n    this.stops = [];\r\n    this.stopDescriptions.forEach(stop => {\r\n      promises.push(dvb.monitor(stop.id, this.timeOffset, this.numberOfOpportunities));\r\n    });\r\n    Promise.all(promises).then(stops => {\r\n      stops.forEach((monitor, index) => {\r\n        this.ShortDestinationsContains(monitor, 'kaditz', 'Kaditz');\r\n        this.ShortDestinationsContains(monitor, 'messe', 'Messe');\r\n        this.ShortDestinations(monitor, 'bischofswerda bahnhof', 'Bischofswerda');\r\n\r\n        this.stops.push({\r\n          name: this.stopDescriptions[index].name,\r\n          monitor: monitor as IMonitor[]\r\n        })\r\n      })\r\n    });\r\n  }\r\n\r\n  /**\r\n   * workaround shorten of direction name\r\n   * @param monitor\r\n   * @param longName\r\n   * @param shortName\r\n   * @constructor\r\n   * @private\r\n   */\r\n  private ShortDestinations(monitor: any, longName: string, shortName:string) {\r\n    const destinations = (monitor as IMonitor[])\r\n      .filter((m: IMonitor) => m.direction.toLocaleLowerCase().trim() === longName.toLowerCase().trim());\r\n    destinations.forEach(destination => {\r\n      destination.direction = shortName;\r\n    });\r\n  }\r\n\r\n\r\n  /**\r\n   * workaround shorten of direction name contains\r\n   * @param monitor\r\n   * @param contains\r\n   * @param shortName\r\n   * @constructor\r\n   * @private\r\n   */\r\n   private ShortDestinationsContains(monitor: any, contains: string, shortName:string) {\r\n    const destinations = (monitor as IMonitor[])\r\n      .filter((m: IMonitor) => m.direction.toLocaleLowerCase().trim().includes(contains.toLowerCase().trim()));\r\n    destinations.forEach(destination => {\r\n      destination.direction = shortName;\r\n    });\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"src/style/variable\";\r\n\r\n.wrapper-widgets {\r\n  display: grid;\r\n  grid-template-rows: 30vh 70vh;\r\n  grid-template-columns:50% 50% ;\r\n  background: $secondary;\r\n}\r\n",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<div class=\"wrapper-widgets\">\r\n  <app-clock\r\n    [timeIsRunning]=\"true\"\r\n  ></app-clock>\r\n  <app-weather\r\n    [latitude]=\"latitude\"\r\n    [longitude]=\"longitude\"\r\n    [animateGraphics]=\"true\"\r\n  ></app-weather>\r\n  <app-tram\r\n    [stops]=\"stops\"\r\n    [timeOffset]=\"timeOffset\"\r\n    [numberOfOpportunities]=\"numberOfOpportunities\"></app-tram>\r\n  <app-stock\r\n    [symbols]=\"symbol\"\r\n    [interval]=\"interval\"\r\n    [range]=\"range\"\r\n    [mockData]=\"mockData\"\r\n    positiveColor=\"green\"\r\n    negativeColor=\"red\"\r\n  ></app-stock>\r\n</div>\r\n\r\n"
        },
        {
            "name": "ClockComponent",
            "id": "component-ClockComponent-90de766274ef33e49916a377e1fbe1e7",
            "file": "src/app/widgets/clock/clock.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-clock",
            "styleUrls": [
                "./clock.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./clock.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "timeIsRunning",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "The time is running",
                    "description": "<p>The time is running</p>\n",
                    "line": 22,
                    "type": "boolean"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "subscription",
                    "defaultValue": "new Subscription()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "time",
                    "defaultValue": "new Date()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "<p>Time to show</p>\n",
                    "line": 17,
                    "rawdescription": "\n\nTime to show\n"
                }
            ],
            "methodsClass": [
                {
                    "name": "letTimeRunning",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setTime",
                    "args": [
                        {
                            "name": "time",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "time",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, Input, OnChanges, OnDestroy, OnInit, SimpleChanges} from '@angular/core';\r\nimport {Subscription, timer} from \"rxjs\";\r\nimport {map, share} from \"rxjs/operators\";\r\n\r\n@Component({\r\n  selector: 'app-clock',\r\n  templateUrl: './clock.component.html',\r\n  styleUrls: ['./clock.component.scss']\r\n})\r\nexport class ClockComponent implements OnInit, OnDestroy, OnChanges {\r\n\r\n  subscription: Subscription = new Subscription();\r\n\r\n  /**\r\n   * Time to show\r\n   */\r\n  time: Date = new Date();\r\n\r\n  /**\r\n   * The time is running\r\n   */\r\n  @Input() timeIsRunning: boolean = true;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    this.letTimeRunning()\r\n  }\r\n\r\n  private setTime(time: Date) {\r\n    this.time = time;\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.timeIsRunning) {\r\n      this.letTimeRunning();\r\n    }\r\n  }\r\n\r\n  private letTimeRunning() {\r\n    this.subscription.unsubscribe();\r\n    if (this.timeIsRunning) {\r\n      this.subscription = timer(0, 1000)\r\n        .pipe(\r\n          map(() => new Date()),\r\n          share()\r\n        )\r\n        .subscribe(time => {\r\n          this.setTime(time);\r\n        });\r\n    }\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"src/style/variable\";\r\n\r\n.wrapper-clock {\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  align-content: center;\r\n  align-items: center;\r\n  gap: 15px;\r\n  background: $secondary;\r\n  color: $primary;\r\n\r\n  .time-clock {\r\n    font-size: 7em;\r\n  }\r\n\r\n  .day-ticker {\r\n    font-size: 2.5em;\r\n    display: flex;\r\n    justify-items: center;\r\n    align-items: center;\r\n    flex-direction: column;\r\n\r\n\r\n  }\r\n}\r\n",
                    "styleUrl": "./clock.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 22
            },
            "implements": [
                "OnInit",
                "OnDestroy",
                "OnChanges"
            ],
            "templateData": "<div class=\"wrapper-clock\">\r\n  <div class=\"time-clock\">\r\n    {{time | date:'H:mm'}}\r\n  </div>\r\n  <div class=\"day-ticker\">\r\n    <div>\r\n      {{time | date:'d.M'}}\r\n    </div>\r\n    <div>\r\n      {{time | date:'E'}}\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "StockComponent",
            "id": "component-StockComponent-1b820283fff269e734d17747e11f7fcf",
            "file": "src/app/widgets/stock/stock.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-stock",
            "styleUrls": [
                "./stock.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./stock.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "interval",
                    "defaultValue": "'1d'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Interval for Stock\r\nOptions: 1m 5m 15m 1d 1wk 1mo",
                    "description": "<p>Interval for Stock\nOptions: 1m 5m 15m 1d 1wk 1mo</p>\n",
                    "line": 28,
                    "type": "string"
                },
                {
                    "name": "mockData",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Mock data for Stock\r\nOnly Symbols AAPL, MSFT available",
                    "description": "<p>Mock data for Stock\nOnly Symbols AAPL, MSFT available</p>\n",
                    "line": 40,
                    "type": "boolean"
                },
                {
                    "name": "negativeColor",
                    "defaultValue": "'red'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Mock data for Stock\r\nOnly Symbols AAPL, MSFT available",
                    "description": "<p>Mock data for Stock\nOnly Symbols AAPL, MSFT available</p>\n",
                    "line": 53,
                    "type": "string"
                },
                {
                    "name": "positiveColor",
                    "defaultValue": "'green'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Mock data for Stock\r\nOnly Symbols AAPL, MSFT available",
                    "description": "<p>Mock data for Stock\nOnly Symbols AAPL, MSFT available</p>\n",
                    "line": 46,
                    "type": "string"
                },
                {
                    "name": "range",
                    "defaultValue": "'1mo'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Range of Stock\r\nOptions: 1d 5d 1mo 3mo 6mo 1y 5y max",
                    "description": "<p>Range of Stock\nOptions: 1d 5d 1mo 3mo 6mo 1y 5y max</p>\n",
                    "line": 34,
                    "type": "string"
                },
                {
                    "name": "symbols",
                    "defaultValue": "'NDAQ'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Symbols for stock",
                    "description": "<p>Symbols for stock</p>\n",
                    "line": 23,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "lineChartColors",
                    "defaultValue": "[\r\n    {\r\n      backgroundColor: '#2f2f2f',\r\n      borderColor: 'white',\r\n    }\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Color[]",
                    "optional": false,
                    "description": "<p>Define colors of chart segments</p>\n",
                    "line": 107,
                    "rawdescription": "\n\nDefine colors of chart segments\n"
                },
                {
                    "name": "lineChartData",
                    "defaultValue": "[\r\n    { data: [], label: 'Curse', pointRadius: 0, borderWidth: 0, lineTension: 0 },\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChartDataSets[]",
                    "optional": false,
                    "description": "<p>Array of different segments in chart</p>\n",
                    "line": 58,
                    "rawdescription": "\n\nArray of different segments in chart\n"
                },
                {
                    "name": "lineChartLabels",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Label[]",
                    "optional": false,
                    "description": "<p>Labels shown on the x-axis</p>\n",
                    "line": 65,
                    "rawdescription": "\n\nLabels shown on the x-axis\n"
                },
                {
                    "name": "lineChartLegend",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Set true to show legends</p>\n",
                    "line": 117,
                    "rawdescription": "\n\nSet true to show legends\n"
                },
                {
                    "name": "lineChartOptions",
                    "defaultValue": "{\r\n    responsive: true,\r\n    defaultColor: 'white',\r\n    scales: {\r\n      xAxes: [{\r\n        ticks:  {\r\n          display: false\r\n        },\r\n        gridLines: {\r\n          display:false\r\n        }\r\n      }],\r\n      yAxes: [{\r\n        ticks:  {\r\n          display: false,\r\n          fontColor: 'white'\r\n        },\r\n        gridLines: {\r\n          display:false\r\n        }\r\n      }]\r\n    },\r\n    legend: {\r\n      display: false,\r\n    },\r\n    layout: {\r\n      padding: {\r\n        top:40,\r\n        left:10,\r\n        right: 10,\r\n      }\r\n    }\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChartOptions",
                    "optional": false,
                    "description": "<p>Define chart options</p>\n",
                    "line": 70,
                    "rawdescription": "\n\nDefine chart options\n"
                },
                {
                    "name": "lineChartPlugins",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "<p>Plugins for Chart.</p>\n",
                    "line": 127,
                    "rawdescription": "\n\nPlugins for Chart.\n"
                },
                {
                    "name": "lineChartType",
                    "defaultValue": "'line'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChartType",
                    "optional": false,
                    "description": "<p>Define type of chart</p>\n",
                    "line": 122,
                    "rawdescription": "\n\nDefine type of chart\n"
                },
                {
                    "name": "symbolData",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SymbolData[]",
                    "optional": false,
                    "description": "<p>Array of symbol informations for chart.js</p>\n",
                    "line": 18,
                    "rawdescription": "\n\nArray of symbol informations for chart.js\n",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "getLineChartData",
                    "args": [
                        {
                            "name": "data",
                            "type": "number[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "{}",
                    "typeParameters": [],
                    "line": 146,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReturn Chartdata for Y axes\n",
                    "description": "<p>Return Chartdata for Y axes</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 2845,
                                "end": 2849,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "data"
                            },
                            "type": "number[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 2839,
                                "end": 2844,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>Array of numbers</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 2874,
                                "end": 2881,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>Chartdata for chart.js</p>\n"
                        }
                    ]
                },
                {
                    "name": "getRelativeDifference",
                    "args": [
                        {
                            "name": "prices",
                            "type": "number[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 157,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCalculate the differnce between beginn and end of the stockchart\n",
                    "description": "<p>Calculate the differnce between beginn and end of the stockchart</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 3162,
                                "end": 3168,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "prices"
                            },
                            "type": "number[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 3156,
                                "end": 3161,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>Array of all prices</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 3196,
                                "end": 3203,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>Relative Difference</p>\n"
                        }
                    ]
                },
                {
                    "name": "getService",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<Object>",
                    "typeParameters": [],
                    "line": 195,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHelping service to choose Mock or Live Data\n",
                    "description": "<p>Helping service to choose Mock or Live Data</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 4411,
                                "end": 4418,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "getStock",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 167,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nGet Stock from Yahoo Api or Mockdata\n",
                    "description": "<p>Get Stock from Yahoo Api or Mockdata</p>\n",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 133,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 137,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, Input, OnChanges, OnInit} from '@angular/core';\r\nimport {ChartDataSets, ChartOptions, ChartType} from 'chart.js';\r\nimport {Color, Label} from 'ng2-charts';\r\nimport {StockService} from \"./service/stock.service\";\r\nimport {Observable, timer} from \"rxjs\";\r\nimport {SymbolData} from './interfaces/symbol';\r\n\r\n@Component({\r\n  selector: 'app-stock',\r\n  templateUrl: './stock.component.html',\r\n  styleUrls: ['./stock.component.scss']\r\n})\r\nexport class StockComponent implements OnInit, OnChanges {\r\n\r\n  /**\r\n   * Array of symbol informations for chart.js\r\n   */\r\n  public symbolData: SymbolData[] = [];\r\n\r\n  /**\r\n   * Symbols for stock\r\n   */\r\n  @Input() symbols: string = 'NDAQ'\r\n  /**\r\n   * Interval for Stock\r\n   * Options: 1m 5m 15m 1d 1wk 1mo\r\n   */\r\n  @Input() interval: string = '1d'\r\n\r\n  /**\r\n   * Range of Stock\r\n   * Options: 1d 5d 1mo 3mo 6mo 1y 5y max\r\n   */\r\n  @Input() range: string = '1mo'\r\n\r\n  /**\r\n   * Mock data for Stock\r\n   * Only Symbols AAPL, MSFT available\r\n   */\r\n  @Input() mockData: boolean = false;\r\n\r\n  /**\r\n   * Mock data for Stock\r\n   * Only Symbols AAPL, MSFT available\r\n   */\r\n   @Input() positiveColor: string = 'green';\r\n\r\n\r\n  /**\r\n   * Mock data for Stock\r\n   * Only Symbols AAPL, MSFT available\r\n   */\r\n   @Input() negativeColor: string = 'red';\r\n\r\n  /**\r\n   * Array of different segments in chart\r\n   */\r\n  lineChartData: ChartDataSets[] = [\r\n    { data: [], label: 'Curse', pointRadius: 0, borderWidth: 0, lineTension: 0 },\r\n  ];\r\n\r\n  /**\r\n   * Labels shown on the x-axis\r\n   */\r\n  lineChartLabels: Label[] = [];\r\n\r\n  /**\r\n   * Define chart options\r\n   */\r\n  lineChartOptions: ChartOptions = {\r\n    responsive: true,\r\n    defaultColor: 'white',\r\n    scales: {\r\n      xAxes: [{\r\n        ticks:  {\r\n          display: false\r\n        },\r\n        gridLines: {\r\n          display:false\r\n        }\r\n      }],\r\n      yAxes: [{\r\n        ticks:  {\r\n          display: false,\r\n          fontColor: 'white'\r\n        },\r\n        gridLines: {\r\n          display:false\r\n        }\r\n      }]\r\n    },\r\n    legend: {\r\n      display: false,\r\n    },\r\n    layout: {\r\n      padding: {\r\n        top:40,\r\n        left:10,\r\n        right: 10,\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Define colors of chart segments\r\n   */\r\n  lineChartColors: Color[] = [\r\n    {\r\n      backgroundColor: '#2f2f2f',\r\n      borderColor: 'white',\r\n    }\r\n  ];\r\n\r\n  /**\r\n   * Set true to show legends\r\n   */\r\n  lineChartLegend = false;\r\n\r\n  /**\r\n   * Define type of chart\r\n   */\r\n  lineChartType: ChartType = 'line';\r\n\r\n  /**\r\n   * Plugins for Chart.\r\n   */\r\n  lineChartPlugins = [];\r\n\r\n  constructor(\r\n    private stockService: StockService,\r\n  ) { }\r\n\r\n  ngOnChanges(): void {\r\n    this.getStock();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    timer(0,1800000).subscribe(() => this.getStock());\r\n  }\r\n\r\n  /**\r\n   * Return Chartdata for Y axes\r\n   * @param data Array of numbers\r\n   * @returns Chartdata for chart.js\r\n   */\r\n  public getLineChartData(data: number[]) {\r\n    return [\r\n      {data: data, label: 'Curse', pointRadius: 0, borderWidth: 3, lineTension: 0},\r\n    ];\r\n  }\r\n\r\n  /**\r\n   * Calculate the differnce between beginn and end of the stockchart\r\n   * @param prices Array of all prices\r\n   * @returns Relative Difference\r\n   */\r\n  public getRelativeDifference(prices: number[]): number {\r\n    if(!prices.length) {\r\n      return -1000;\r\n    }\r\n    return Math.round((prices[prices.length - 1] / prices[0] - 1) * 100 * 100) / 100;\r\n  }\r\n\r\n  /**\r\n   * Get Stock from Yahoo Api or Mockdata\r\n   */\r\n  private getStock() {\r\n    this.getService()\r\n       .subscribe((result: any) => {\r\n      this.symbolData = [];\r\n      this.symbols.split(',').forEach((symbol: string) => {\r\n        this.symbolData.push(\r\n          {\r\n            name: symbol.slice(0,4),\r\n            currentPrice: result[symbol].chartPreviousClose,\r\n            relativeDifference: this.getRelativeDifference(result[symbol].close),\r\n            prices: this.getLineChartData(result[symbol].close),\r\n            times: (result[symbol].timestamp as number[]).map(time => time.toString()),\r\n            lineChartColors: [\r\n              {\r\n                backgroundColor: '#2f2f2f',\r\n                borderColor: this.getRelativeDifference(result[symbol].close) > 0 ? this.positiveColor : this.negativeColor,\r\n              }\r\n            ]\r\n          });\r\n      })\r\n\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Helping service to choose Mock or Live Data\r\n   * @returns\r\n   */\r\n  private getService(): Observable<Object> {\r\n    return this.mockData\r\n      ? this.stockService.getSparkMock()\r\n      : this.stockService.getSpark(this.symbols, this.interval, this.range)\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"src/style/variable\";\r\n.wrapper-stock {\r\n  width: 100%;\r\n  height: 100%;\r\n  background: $secondary;\r\n  color: $primary;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-content: center;\r\n\r\n  .stock {\r\n    display: flex;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n    font-size: 2em;\r\n  }\r\n}\r\n",
                    "styleUrl": "./stock.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "stockService",
                        "type": "StockService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 127,
                "jsdoctags": [
                    {
                        "name": "stockService",
                        "type": "StockService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnChanges"
            ],
            "templateData": "<div class=\"wrapper-stock\">\r\n  <div class=\"stock\" *ngFor=\"let symbol of symbolData\">\r\n    <div class=\"chart\" *ngIf=\"symbol\">\r\n      <canvas baseChart\r\n        width=\"100\"\r\n        height=\"110\"\r\n        [datasets]=\"symbol.prices\"\r\n        [labels]=\"symbol.times\"\r\n        [options]=\"lineChartOptions\"\r\n        [colors]=\"symbol.lineChartColors\"\r\n        [legend]=\"lineChartLegend\"\r\n        [chartType]=\"lineChartType\"\r\n        [plugins]=\"lineChartPlugins\">\r\n      </canvas>\r\n    </div>\r\n    <div class=\"stock-name\">\r\n      {{symbol.name}}\r\n    </div>\r\n    <div class=\"stock-values\">\r\n      <div class=\"stock-current-price\">\r\n        {{symbol.currentPrice}}\r\n      </div>\r\n      <div class=\"stock-relative-difference\" [ngStyle]=\"{'color': symbol.relativeDifference > 0 ? positiveColor : negativeColor}\">\r\n        <ng-container *ngIf=\"symbol.relativeDifference > 0\">+</ng-container>{{symbol.relativeDifference}}&thinsp;%\r\n      </div>\r\n    </div>\r\n  </div>\r\n  \r\n</div>\r\n"
        },
        {
            "name": "TramComponent",
            "id": "component-TramComponent-a8bd458e5b2dd5c2e51a8e75bdc887de",
            "file": "src/app/widgets/tram/tram.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-tram",
            "styleUrls": [
                "./tram.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./tram.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "numberOfOpportunities",
                    "defaultValue": "4",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "number"
                },
                {
                    "name": "stops",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "Stop[]"
                },
                {
                    "name": "timeOffset",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "number"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, Input, OnChanges, OnInit, SimpleChanges} from '@angular/core';\r\nimport {Stop} from \"./interfaces/dvb\";\r\n\r\n@Component({\r\n  selector: 'app-tram',\r\n  templateUrl: './tram.component.html',\r\n  styleUrls: ['./tram.component.scss']\r\n})\r\nexport class TramComponent implements OnInit, OnChanges {\r\n\r\n  @Input() stops: Stop[] = [];\r\n  @Input() timeOffset = 0;\r\n  @Input() numberOfOpportunities = 4;\r\n\r\n  constructor() { }\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    console.log('stops', this.stops)\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    \r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"src/style/variable\";\r\n\r\n.wrapper-tram {\r\n  width: 100%;\r\n  height: 100%;\r\n  background: $secondary;\r\n  color: $primary;\r\n\r\n\r\n  .tram-stops {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    height: 50%;\r\n\r\n    .stop-name {\r\n      background: $primary;\r\n      color: $secondary;\r\n      width: 100%;\r\n      padding-left: 1em;\r\n    }\r\n\r\n    .stop-cards {\r\n      display: flex;\r\n      justify-content: space-around;\r\n      width: 100%;\r\n\r\n      .stop-opportunities {\r\n        .opp-line {\r\n          font-size: 2.5em;\r\n        }\r\n\r\n        .opp-direction {\r\n          font-size: 1.2em;\r\n          white-space: nowrap;\r\n          text-overflow: ellipsis;\r\n        }\r\n\r\n        .opp-time {\r\n          font-size: 2em;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\r\n",
                    "styleUrl": "./tram.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 13
            },
            "implements": [
                "OnInit",
                "OnChanges"
            ],
            "templateData": "<div class=\"wrapper-tram\">\r\n  <div class=\"tram-stops\" *ngFor=\"let stop of stops\">\r\n    <div class=\"stop-name\">{{stop.name}}</div>\r\n    <div class=\"stop-cards\">\r\n      <div class=\"stop-opportunities\" *ngFor=\"let opportunity of stop.monitor\">\r\n          <div class=\"opp-line\">{{opportunity.line}}</div>\r\n          <div class=\"opp-direction\">{{opportunity.direction}}</div>\r\n          <div class=\"opp-time\">{{opportunity.arrivalTime | date:'H:mm'}}</div>\r\n      </div>\r\n    </div>\r\n    <div></div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "WeatherComponent",
            "id": "component-WeatherComponent-15951180d803f55793d5d1d5937e8bac",
            "file": "src/app/widgets/weather/weather.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-weather",
            "styleUrls": [
                "./weather.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./weather.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "animateGraphics",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "boolean"
                },
                {
                    "name": "latitude",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "number"
                },
                {
                    "name": "longitude",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "number"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "currentTemperature",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "dayHighTemperature",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "dayLowTemperature",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "skyCons",
                    "defaultValue": "new Skycons({'color': '#ffffff'})",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "weekForecast",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type[]",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "getWeather",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, Input, OnInit} from '@angular/core';\r\nimport {WeatherService} from \"./services/weather.service\";\r\nimport {Skycons} from 'skycons-ts';\r\nimport {timer} from \"rxjs\";\r\n\r\n@Component({\r\n  selector: 'app-weather',\r\n  templateUrl: './weather.component.html',\r\n  styleUrls: ['./weather.component.scss']\r\n})\r\nexport class WeatherComponent implements OnInit {\r\n\r\n  @Input() latitude: number = 0;\r\n  @Input() longitude: number = 0;\r\n  @Input() animateGraphics: boolean = true;\r\n\r\n  public currentTemperature? = 0;\r\n  public dayHighTemperature? = 0;\r\n  public dayLowTemperature? = 0;\r\n  public weekForecast: {day: Date, temperature: number, icon: any}[] = []\r\n  public skyCons = new Skycons({'color': '#ffffff'});\r\n\r\n  constructor(\r\n    private weatherService: WeatherService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    timer(0,120000).subscribe(() => this.getWeather());\r\n  }\r\n\r\n  private getWeather() {\r\n    this.weatherService.getForecastWeather(this.latitude, this.longitude)\r\n      .subscribe((weather: any) => {\r\n          this.currentTemperature = Math.round(weather.currently.temperature);\r\n          this.skyCons.add('iconCurrent', weather.currently.icon);\r\n          this.weekForecast = [];\r\n          weather.daily.data.forEach((dailyWeather: any, index: number) => {\r\n            if (index == 0) {\r\n              this.dayHighTemperature = Math.round(dailyWeather.temperatureHigh);\r\n              this.dayLowTemperature = Math.round(dailyWeather.temperatureLow);\r\n              return;\r\n            }\r\n            if (index > 4) {\r\n              return;\r\n            }\r\n\r\n            const nextDate = new Date();\r\n            nextDate.setDate(nextDate.getDate() + index)\r\n            this.weekForecast.push(\r\n              {\r\n                day: nextDate,\r\n                temperature: Math.round(dailyWeather.temperatureHigh),\r\n                icon: dailyWeather.icon\r\n              });\r\n          });\r\n        }\r\n      );\r\n\r\n    setTimeout(() => {\r\n      this.weekForecast.forEach((value, index) => {\r\n        this.skyCons.add(`iconForecast${index + 1}`, value.icon);\r\n      })\r\n      if (this.animateGraphics) {\r\n        this.skyCons.play();\r\n      }\r\n    }, 1000);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"src/style/variable\";\r\n\r\n.wrapper-weather {\r\n  width: 100%;\r\n  height: 100%;\r\n  background: $secondary;\r\n  color: $primary;\r\n\r\n  .weather-current {\r\n    height: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-content: center;\r\n    align-items: center;\r\n    gap: 10px;\r\n    margin-bottom: -40px;\r\n\r\n    .weather-current-temperature {\r\n      font-size: 7.5em;\r\n    }\r\n    \r\n    .weather-high-low {\r\n      font-size: 2.5em;\r\n    }\r\n\r\n    .weather-current-temp-high-low {\r\n      display: flex;\r\n      flex-direction: column;\r\n      justify-content: center;\r\n      align-content: center;\r\n    }\r\n  }\r\n\r\n  .weather-forecast {\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: space-around;\r\n\r\n    .weather-forecast-temperature {\r\n      font-size: 1.5em;\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./weather.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "weatherService",
                        "type": "WeatherService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 21,
                "jsdoctags": [
                    {
                        "name": "weatherService",
                        "type": "WeatherService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"wrapper-weather\">\r\n  <div class=\"weather-current\">\r\n    <div class=\"weather-current-temperature\">\r\n      {{currentTemperature}}°\r\n    </div>\r\n    <div class=\"weather-high-low\">\r\n      <div>{{dayHighTemperature}}°</div>\r\n      <div>{{dayLowTemperature}}°</div>\r\n    </div>\r\n    <div class=\"weather-current-temp-high-low\">\r\n      <canvas id=\"iconCurrent\" width=\"120\" height=\"120\"></canvas>\r\n    </div>\r\n  </div>\r\n  <!-- <div class=\"weather-forecast\">\r\n    <div class=\"weather-forecast-{{index}}\" *ngFor=\"let daily of weekForecast; let index = index\">\r\n      <div class=\"weather-weekday\">{{daily.day | date:'EEEE'}}</div>\r\n      <canvas id=\"iconForecast{{index + 1}}\" width=\"32\" height=\"32\"></canvas>\r\n      <div class=\"weather-forecast-temperature\">{{daily.temperature}}°</div>\r\n    </div>\r\n  </div> -->\r\n</div>\r\n"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-851d934b3a5a9fa12f51940886aed1ad",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { APP_INITIALIZER } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { TramComponent } from './widgets/tram/tram.component';\r\nimport { ClockComponent } from './widgets/clock/clock.component';\r\nimport { StockComponent } from './widgets/stock/stock.component';\r\nimport { WeatherComponent } from './widgets/weather/weather.component';\r\nimport {AppConfig} from \"./app-config\";\r\nimport {HttpClientModule} from \"@angular/common/http\";\r\nimport {ChartsModule} from \"ng2-charts\";\r\n\r\nexport function initializeApp(appConfig: AppConfig) {\r\n  return () => appConfig.load();\r\n}\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    TramComponent,\r\n    ClockComponent,\r\n    StockComponent,\r\n    WeatherComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    NgbModule,\r\n    HttpClientModule,\r\n    ChartsModule\r\n  ],\r\n  providers: [\r\n    AppConfig,\r\n    { provide: APP_INITIALIZER,\r\n      useFactory: initializeApp,\r\n      deps: [AppConfig], multi: true }],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": [
                        {
                            "name": "AppConfig"
                        }
                    ]
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "ClockComponent"
                        },
                        {
                            "name": "StockComponent"
                        },
                        {
                            "name": "TramComponent"
                        },
                        {
                            "name": "WeatherComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-e4d613fffefb7dc13c466971e8e2e52d",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "Afternoon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/clock.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => {\r\n  return({\r\n    props: {\r\n      timeIsRunning: false,\r\n      time: new Date(2021, 10, 9, 15, 15, 15, 15)\r\n    }\r\n  })\r\n}"
            },
            {
                "name": "Animated",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/weather.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "AppleAndMicrosoft",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/stock.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "dashboard",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/widgetmonitor.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.default.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  production: true,\r\n  darkSkyApiKey: '00000',\r\n  yahooApiKey: '00000',\r\n  alphavantageKey: '00000'\r\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: true,\n  darkSkyApiKey: 'd086c712caa4f43bb1e947dd4012931d',\n  yahooApiKey: 'WSGPhTUfb55I16HQMp2Zh3Mi31qKpJQbamxz0RM3',\n  alphavantageKey: '00000'\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: false,\n  darkSkyApiKey: 'd086c712caa4f43bb1e947dd4012931d',\n  yahooApiKey: 'WSGPhTUfb55I16HQMp2Zh3Mi31qKpJQbamxz0RM3',\n  alphavantageKey: '00000'\n}"
            },
            {
                "name": "environmentDefault",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.default.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  production: false,\r\n  darkSkyApiKey: '00000',\r\n  yahooApiKey: '00000',\r\n  alphavantageKey: '00000'\r\n}"
            },
            {
                "name": "Morning",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/clock.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => {\r\n  return({\r\n    props: {\r\n      timeIsRunning: false,\r\n      time: new Date(2021, 10, 9, 9, 9, 9, 9)\r\n    },\r\n    parameter: {\r\n      time: new Date(2021, 10, 9, 9, 9, 9, 9)\r\n    }\r\n  })\r\n}"
            },
            {
                "name": "Running",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/clock.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Stay",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/weather.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "stops",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/traum.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  {\r\n      \"name\": \"Gabelsbergerstr.\",\r\n      \"monitor\": [\r\n          {\r\n              \"arrivalTime\": \"2021-10-21T19:01:00.000Z\",\r\n              \"scheduledTime\": \"2021-10-21T19:01:00.000Z\",\r\n              \"id\": \"voe:21064: :R:j21\",\r\n              \"line\": \"64\",\r\n              \"direction\": \"Reick\",\r\n              \"platform\": {\r\n                  \"name\": \"1\",\r\n                  \"type\": \"Platform\"\r\n              },\r\n              \"arrivalTimeRelative\": -1,\r\n              \"scheduledTimeRelative\": -1,\r\n              \"delayTime\": 0,\r\n              \"state\": \"InTime\",\r\n              \"mode\": {\r\n                  \"title\": \"Bus\",\r\n                  \"name\": \"CityBus\",\r\n                  \"iconUrl\": \"https://www.dvb.de/assets/img/trans-icon/transport-bus.svg\"\r\n              },\r\n              \"diva\": {\r\n                  \"number\": 21064,\r\n                  \"network\": \"voe\"\r\n              }\r\n          },\r\n          {\r\n              \"arrivalTime\": \"2021-10-21T19:05:00.000Z\",\r\n              \"scheduledTime\": \"2021-10-21T19:05:00.000Z\",\r\n              \"id\": \"voe:11012: :H:j21\",\r\n              \"line\": \"12\",\r\n              \"direction\": \"Leutewitz\",\r\n              \"platform\": {\r\n                  \"name\": \"1\",\r\n                  \"type\": \"Platform\"\r\n              },\r\n              \"arrivalTimeRelative\": 3,\r\n              \"scheduledTimeRelative\": 3,\r\n              \"delayTime\": 0,\r\n              \"state\": \"Cancelled\",\r\n              \"mode\": {\r\n                  \"title\": \"Straßenbahn\",\r\n                  \"name\": \"Tram\",\r\n                  \"iconUrl\": \"https://www.dvb.de/assets/img/trans-icon/transport-tram.svg\"\r\n              },\r\n              \"diva\": {\r\n                  \"number\": 11012,\r\n                  \"network\": \"voe\"\r\n              }\r\n          },\r\n          {\r\n              \"arrivalTime\": \"2021-10-21T19:15:00.000Z\",\r\n              \"scheduledTime\": \"2021-10-21T19:15:00.000Z\",\r\n              \"id\": \"voe:11012: :R:j21\",\r\n              \"line\": \"12\",\r\n              \"direction\": \"Reick\",\r\n              \"platform\": {\r\n                  \"name\": \"2\",\r\n                  \"type\": \"Platform\"\r\n              },\r\n              \"arrivalTimeRelative\": 13,\r\n              \"scheduledTimeRelative\": 13,\r\n              \"delayTime\": 0,\r\n              \"state\": \"Cancelled\",\r\n              \"mode\": {\r\n                  \"title\": \"Straßenbahn\",\r\n                  \"name\": \"Tram\",\r\n                  \"iconUrl\": \"https://www.dvb.de/assets/img/trans-icon/transport-tram.svg\"\r\n              },\r\n              \"diva\": {\r\n                  \"number\": 11012,\r\n                  \"network\": \"voe\"\r\n              }\r\n          },\r\n          {\r\n              \"arrivalTime\": \"2021-10-21T19:16:00.000Z\",\r\n              \"scheduledTime\": \"2021-10-21T19:16:00.000Z\",\r\n              \"id\": \"voe:21064: :R:j21\",\r\n              \"line\": \"64\",\r\n              \"direction\": \"Striesen\",\r\n              \"platform\": {\r\n                  \"name\": \"1\",\r\n                  \"type\": \"Platform\"\r\n              },\r\n              \"arrivalTimeRelative\": 14,\r\n              \"scheduledTimeRelative\": 14,\r\n              \"delayTime\": 0,\r\n              \"state\": \"InTime\",\r\n              \"mode\": {\r\n                  \"title\": \"Bus\",\r\n                  \"name\": \"CityBus\",\r\n                  \"iconUrl\": \"https://www.dvb.de/assets/img/trans-icon/transport-bus.svg\"\r\n              },\r\n              \"diva\": {\r\n                  \"number\": 21064,\r\n                  \"network\": \"voe\"\r\n              }\r\n          }\r\n      ]\r\n  },\r\n  {\r\n      \"name\": \"Fetscherplatz\",\r\n      \"monitor\": [\r\n          {\r\n              \"arrivalTime\": \"2021-10-21T19:03:00.000Z\",\r\n              \"scheduledTime\": \"2021-10-21T19:03:00.000Z\",\r\n              \"id\": \"voe:21064: :R:j21\",\r\n              \"line\": \"64\",\r\n              \"direction\": \"Reick\",\r\n              \"platform\": {\r\n                  \"name\": \"7\",\r\n                  \"type\": \"Platform\"\r\n              },\r\n              \"arrivalTimeRelative\": 1,\r\n              \"scheduledTimeRelative\": 1,\r\n              \"delayTime\": 0,\r\n              \"state\": \"InTime\",\r\n              \"mode\": {\r\n                  \"title\": \"Bus\",\r\n                  \"name\": \"CityBus\",\r\n                  \"iconUrl\": \"https://www.dvb.de/assets/img/trans-icon/transport-bus.svg\"\r\n              },\r\n              \"diva\": {\r\n                  \"number\": 21064,\r\n                  \"network\": \"voe\"\r\n              }\r\n          },\r\n          {\r\n              \"arrivalTime\": \"2021-10-21T19:07:00.000Z\",\r\n              \"scheduledTime\": \"2021-10-21T19:07:00.000Z\",\r\n              \"id\": \"voe:11012: :H:j21\",\r\n              \"line\": \"12\",\r\n              \"direction\": \"Leutewitz\",\r\n              \"platform\": {\r\n                  \"name\": \"1\",\r\n                  \"type\": \"Platform\"\r\n              },\r\n              \"arrivalTimeRelative\": 5,\r\n              \"scheduledTimeRelative\": 5,\r\n              \"delayTime\": 0,\r\n              \"state\": \"Cancelled\",\r\n              \"mode\": {\r\n                  \"title\": \"Straßenbahn\",\r\n                  \"name\": \"Tram\",\r\n                  \"iconUrl\": \"https://www.dvb.de/assets/img/trans-icon/transport-tram.svg\"\r\n              },\r\n              \"diva\": {\r\n                  \"number\": 11012,\r\n                  \"network\": \"voe\"\r\n              }\r\n          },\r\n          {\r\n              \"arrivalTime\": \"2021-10-21T19:07:00.000Z\",\r\n              \"scheduledTime\": \"2021-10-21T19:07:00.000Z\",\r\n              \"id\": \"voe:11010: :H:j21\",\r\n              \"line\": \"10\",\r\n              \"direction\": \"Messe\",\r\n              \"platform\": {\r\n                  \"name\": \"1\",\r\n                  \"type\": \"Platform\"\r\n              },\r\n              \"arrivalTimeRelative\": 5,\r\n              \"scheduledTimeRelative\": 5,\r\n              \"delayTime\": 0,\r\n              \"state\": \"Cancelled\",\r\n              \"mode\": {\r\n                  \"title\": \"Straßenbahn\",\r\n                  \"name\": \"Tram\",\r\n                  \"iconUrl\": \"https://www.dvb.de/assets/img/trans-icon/transport-tram.svg\"\r\n              },\r\n              \"diva\": {\r\n                  \"number\": 11010,\r\n                  \"network\": \"voe\"\r\n              }\r\n          },\r\n          {\r\n              \"arrivalTime\": \"2021-10-21T19:07:00.000Z\",\r\n              \"scheduledTime\": \"2021-10-21T19:07:00.000Z\",\r\n              \"id\": \"voe:11004: :R:j21\",\r\n              \"line\": \"4\",\r\n              \"direction\": \"Laubegast\",\r\n              \"platform\": {\r\n                  \"name\": \"2\",\r\n                  \"type\": \"Platform\"\r\n              },\r\n              \"arrivalTimeRelative\": 5,\r\n              \"scheduledTimeRelative\": 5,\r\n              \"delayTime\": 0,\r\n              \"state\": \"Cancelled\",\r\n              \"mode\": {\r\n                  \"title\": \"Straßenbahn\",\r\n                  \"name\": \"Tram\",\r\n                  \"iconUrl\": \"https://www.dvb.de/assets/img/trans-icon/transport-tram.svg\"\r\n              },\r\n              \"diva\": {\r\n                  \"number\": 11004,\r\n                  \"network\": \"voe\"\r\n              }\r\n          }\r\n      ]\r\n  }\r\n]"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/clock.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ClockComponent>",
                "defaultValue": "(args: ClockComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/stock.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<StockComponent>",
                "defaultValue": "(args: StockComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/traum.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<TramComponent>",
                "defaultValue": "(args: TramComponent) => ({\r\n  props: {\r\n    ...args,\r\n    stops: stops\r\n  },\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/widgetmonitor.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ClockComponent>",
                "defaultValue": "(args: ClockComponent) => ({\r\n  props: {\r\n    ...args,\r\n    stopDescriptions: [\r\n      {\r\n          id: \"33000044\",\r\n          name: \"Gabelsbergerstr.\"\r\n      },\r\n      {\r\n          id: \"33000062\",\r\n          name: \"Fetscherplatz\"\r\n      }\r\n    ],\r\n    timeOffset: 0,\r\n    latitude: 51.0504088,\r\n    longitude: 13.7372621,\r\n    symbol: \"AAPL,MSFT,AAPL\",\r\n    interval: \"1d\",\r\n    range: \"1mo\",\r\n    mockData: true,\r\n  }\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/weather.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<WeatherComponent>",
                "defaultValue": "(args: WeatherComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Tram",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/traum.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            }
        ],
        "functions": [
            {
                "name": "initializeApp",
                "file": "src/app/app.module.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "appConfig",
                        "type": "AppConfig",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "appConfig",
                        "type": "AppConfig",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        ],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/stories/clock.stories.ts": [
                {
                    "name": "Afternoon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/clock.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => {\r\n  return({\r\n    props: {\r\n      timeIsRunning: false,\r\n      time: new Date(2021, 10, 9, 15, 15, 15, 15)\r\n    }\r\n  })\r\n}"
                },
                {
                    "name": "Morning",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/clock.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => {\r\n  return({\r\n    props: {\r\n      timeIsRunning: false,\r\n      time: new Date(2021, 10, 9, 9, 9, 9, 9)\r\n    },\r\n    parameter: {\r\n      time: new Date(2021, 10, 9, 9, 9, 9, 9)\r\n    }\r\n  })\r\n}"
                },
                {
                    "name": "Running",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/clock.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/clock.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ClockComponent>",
                    "defaultValue": "(args: ClockComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/stories/weather.stories.ts": [
                {
                    "name": "Animated",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/weather.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Stay",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/weather.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/weather.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<WeatherComponent>",
                    "defaultValue": "(args: WeatherComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/stories/stock.stories.ts": [
                {
                    "name": "AppleAndMicrosoft",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/stock.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/stock.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<StockComponent>",
                    "defaultValue": "(args: StockComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/stories/widgetmonitor.stories.ts": [
                {
                    "name": "dashboard",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/widgetmonitor.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/widgetmonitor.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ClockComponent>",
                    "defaultValue": "(args: ClockComponent) => ({\r\n  props: {\r\n    ...args,\r\n    stopDescriptions: [\r\n      {\r\n          id: \"33000044\",\r\n          name: \"Gabelsbergerstr.\"\r\n      },\r\n      {\r\n          id: \"33000062\",\r\n          name: \"Fetscherplatz\"\r\n      }\r\n    ],\r\n    timeOffset: 0,\r\n    latitude: 51.0504088,\r\n    longitude: 13.7372621,\r\n    symbol: \"AAPL,MSFT,AAPL\",\r\n    interval: \"1d\",\r\n    range: \"1mo\",\r\n    mockData: true,\r\n  }\r\n})"
                }
            ],
            "src/environments/environment.default.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.default.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  production: true,\r\n  darkSkyApiKey: '00000',\r\n  yahooApiKey: '00000',\r\n  alphavantageKey: '00000'\r\n}"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: true,\n  darkSkyApiKey: 'd086c712caa4f43bb1e947dd4012931d',\n  yahooApiKey: 'WSGPhTUfb55I16HQMp2Zh3Mi31qKpJQbamxz0RM3',\n  alphavantageKey: '00000'\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: false,\n  darkSkyApiKey: 'd086c712caa4f43bb1e947dd4012931d',\n  yahooApiKey: 'WSGPhTUfb55I16HQMp2Zh3Mi31qKpJQbamxz0RM3',\n  alphavantageKey: '00000'\n}"
                }
            ],
            "src/environments/environment.default.ts": [
                {
                    "name": "environmentDefault",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.default.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  production: false,\r\n  darkSkyApiKey: '00000',\r\n  yahooApiKey: '00000',\r\n  alphavantageKey: '00000'\r\n}"
                }
            ],
            "src/stories/traum.stories.ts": [
                {
                    "name": "stops",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/traum.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  {\r\n      \"name\": \"Gabelsbergerstr.\",\r\n      \"monitor\": [\r\n          {\r\n              \"arrivalTime\": \"2021-10-21T19:01:00.000Z\",\r\n              \"scheduledTime\": \"2021-10-21T19:01:00.000Z\",\r\n              \"id\": \"voe:21064: :R:j21\",\r\n              \"line\": \"64\",\r\n              \"direction\": \"Reick\",\r\n              \"platform\": {\r\n                  \"name\": \"1\",\r\n                  \"type\": \"Platform\"\r\n              },\r\n              \"arrivalTimeRelative\": -1,\r\n              \"scheduledTimeRelative\": -1,\r\n              \"delayTime\": 0,\r\n              \"state\": \"InTime\",\r\n              \"mode\": {\r\n                  \"title\": \"Bus\",\r\n                  \"name\": \"CityBus\",\r\n                  \"iconUrl\": \"https://www.dvb.de/assets/img/trans-icon/transport-bus.svg\"\r\n              },\r\n              \"diva\": {\r\n                  \"number\": 21064,\r\n                  \"network\": \"voe\"\r\n              }\r\n          },\r\n          {\r\n              \"arrivalTime\": \"2021-10-21T19:05:00.000Z\",\r\n              \"scheduledTime\": \"2021-10-21T19:05:00.000Z\",\r\n              \"id\": \"voe:11012: :H:j21\",\r\n              \"line\": \"12\",\r\n              \"direction\": \"Leutewitz\",\r\n              \"platform\": {\r\n                  \"name\": \"1\",\r\n                  \"type\": \"Platform\"\r\n              },\r\n              \"arrivalTimeRelative\": 3,\r\n              \"scheduledTimeRelative\": 3,\r\n              \"delayTime\": 0,\r\n              \"state\": \"Cancelled\",\r\n              \"mode\": {\r\n                  \"title\": \"Straßenbahn\",\r\n                  \"name\": \"Tram\",\r\n                  \"iconUrl\": \"https://www.dvb.de/assets/img/trans-icon/transport-tram.svg\"\r\n              },\r\n              \"diva\": {\r\n                  \"number\": 11012,\r\n                  \"network\": \"voe\"\r\n              }\r\n          },\r\n          {\r\n              \"arrivalTime\": \"2021-10-21T19:15:00.000Z\",\r\n              \"scheduledTime\": \"2021-10-21T19:15:00.000Z\",\r\n              \"id\": \"voe:11012: :R:j21\",\r\n              \"line\": \"12\",\r\n              \"direction\": \"Reick\",\r\n              \"platform\": {\r\n                  \"name\": \"2\",\r\n                  \"type\": \"Platform\"\r\n              },\r\n              \"arrivalTimeRelative\": 13,\r\n              \"scheduledTimeRelative\": 13,\r\n              \"delayTime\": 0,\r\n              \"state\": \"Cancelled\",\r\n              \"mode\": {\r\n                  \"title\": \"Straßenbahn\",\r\n                  \"name\": \"Tram\",\r\n                  \"iconUrl\": \"https://www.dvb.de/assets/img/trans-icon/transport-tram.svg\"\r\n              },\r\n              \"diva\": {\r\n                  \"number\": 11012,\r\n                  \"network\": \"voe\"\r\n              }\r\n          },\r\n          {\r\n              \"arrivalTime\": \"2021-10-21T19:16:00.000Z\",\r\n              \"scheduledTime\": \"2021-10-21T19:16:00.000Z\",\r\n              \"id\": \"voe:21064: :R:j21\",\r\n              \"line\": \"64\",\r\n              \"direction\": \"Striesen\",\r\n              \"platform\": {\r\n                  \"name\": \"1\",\r\n                  \"type\": \"Platform\"\r\n              },\r\n              \"arrivalTimeRelative\": 14,\r\n              \"scheduledTimeRelative\": 14,\r\n              \"delayTime\": 0,\r\n              \"state\": \"InTime\",\r\n              \"mode\": {\r\n                  \"title\": \"Bus\",\r\n                  \"name\": \"CityBus\",\r\n                  \"iconUrl\": \"https://www.dvb.de/assets/img/trans-icon/transport-bus.svg\"\r\n              },\r\n              \"diva\": {\r\n                  \"number\": 21064,\r\n                  \"network\": \"voe\"\r\n              }\r\n          }\r\n      ]\r\n  },\r\n  {\r\n      \"name\": \"Fetscherplatz\",\r\n      \"monitor\": [\r\n          {\r\n              \"arrivalTime\": \"2021-10-21T19:03:00.000Z\",\r\n              \"scheduledTime\": \"2021-10-21T19:03:00.000Z\",\r\n              \"id\": \"voe:21064: :R:j21\",\r\n              \"line\": \"64\",\r\n              \"direction\": \"Reick\",\r\n              \"platform\": {\r\n                  \"name\": \"7\",\r\n                  \"type\": \"Platform\"\r\n              },\r\n              \"arrivalTimeRelative\": 1,\r\n              \"scheduledTimeRelative\": 1,\r\n              \"delayTime\": 0,\r\n              \"state\": \"InTime\",\r\n              \"mode\": {\r\n                  \"title\": \"Bus\",\r\n                  \"name\": \"CityBus\",\r\n                  \"iconUrl\": \"https://www.dvb.de/assets/img/trans-icon/transport-bus.svg\"\r\n              },\r\n              \"diva\": {\r\n                  \"number\": 21064,\r\n                  \"network\": \"voe\"\r\n              }\r\n          },\r\n          {\r\n              \"arrivalTime\": \"2021-10-21T19:07:00.000Z\",\r\n              \"scheduledTime\": \"2021-10-21T19:07:00.000Z\",\r\n              \"id\": \"voe:11012: :H:j21\",\r\n              \"line\": \"12\",\r\n              \"direction\": \"Leutewitz\",\r\n              \"platform\": {\r\n                  \"name\": \"1\",\r\n                  \"type\": \"Platform\"\r\n              },\r\n              \"arrivalTimeRelative\": 5,\r\n              \"scheduledTimeRelative\": 5,\r\n              \"delayTime\": 0,\r\n              \"state\": \"Cancelled\",\r\n              \"mode\": {\r\n                  \"title\": \"Straßenbahn\",\r\n                  \"name\": \"Tram\",\r\n                  \"iconUrl\": \"https://www.dvb.de/assets/img/trans-icon/transport-tram.svg\"\r\n              },\r\n              \"diva\": {\r\n                  \"number\": 11012,\r\n                  \"network\": \"voe\"\r\n              }\r\n          },\r\n          {\r\n              \"arrivalTime\": \"2021-10-21T19:07:00.000Z\",\r\n              \"scheduledTime\": \"2021-10-21T19:07:00.000Z\",\r\n              \"id\": \"voe:11010: :H:j21\",\r\n              \"line\": \"10\",\r\n              \"direction\": \"Messe\",\r\n              \"platform\": {\r\n                  \"name\": \"1\",\r\n                  \"type\": \"Platform\"\r\n              },\r\n              \"arrivalTimeRelative\": 5,\r\n              \"scheduledTimeRelative\": 5,\r\n              \"delayTime\": 0,\r\n              \"state\": \"Cancelled\",\r\n              \"mode\": {\r\n                  \"title\": \"Straßenbahn\",\r\n                  \"name\": \"Tram\",\r\n                  \"iconUrl\": \"https://www.dvb.de/assets/img/trans-icon/transport-tram.svg\"\r\n              },\r\n              \"diva\": {\r\n                  \"number\": 11010,\r\n                  \"network\": \"voe\"\r\n              }\r\n          },\r\n          {\r\n              \"arrivalTime\": \"2021-10-21T19:07:00.000Z\",\r\n              \"scheduledTime\": \"2021-10-21T19:07:00.000Z\",\r\n              \"id\": \"voe:11004: :R:j21\",\r\n              \"line\": \"4\",\r\n              \"direction\": \"Laubegast\",\r\n              \"platform\": {\r\n                  \"name\": \"2\",\r\n                  \"type\": \"Platform\"\r\n              },\r\n              \"arrivalTimeRelative\": 5,\r\n              \"scheduledTimeRelative\": 5,\r\n              \"delayTime\": 0,\r\n              \"state\": \"Cancelled\",\r\n              \"mode\": {\r\n                  \"title\": \"Straßenbahn\",\r\n                  \"name\": \"Tram\",\r\n                  \"iconUrl\": \"https://www.dvb.de/assets/img/trans-icon/transport-tram.svg\"\r\n              },\r\n              \"diva\": {\r\n                  \"number\": 11004,\r\n                  \"network\": \"voe\"\r\n              }\r\n          }\r\n      ]\r\n  }\r\n]"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/traum.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<TramComponent>",
                    "defaultValue": "(args: TramComponent) => ({\r\n  props: {\r\n    ...args,\r\n    stops: stops\r\n  },\r\n})"
                },
                {
                    "name": "Tram",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/traum.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ]
        },
        "groupedFunctions": {
            "src/app/app.module.ts": [
                {
                    "name": "initializeApp",
                    "file": "src/app/app.module.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "appConfig",
                            "type": "AppConfig",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "appConfig",
                            "type": "AppConfig",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 3,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app-config.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AppConfig",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 11,
                "coverageCount": "2/17",
                "status": "low"
            },
            {
                "filePath": "src/app/app.module.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "initializeApp",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/widget-config.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "WidgetConfig",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/widgets/clock/clock.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ClockComponent",
                "coveragePercent": 20,
                "coverageCount": "2/10",
                "status": "low"
            },
            {
                "filePath": "src/app/widgets/stock/interfaces/symbol.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "SymbolData",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/widgets/stock/service/stock.av.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "StockAvService",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/widgets/stock/service/stock.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "StockService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/widgets/stock/stock.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "StockComponent",
                "coveragePercent": 81,
                "coverageCount": "18/22",
                "status": "very-good"
            },
            {
                "filePath": "src/app/widgets/tram/interfaces/dvb.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IDiva",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/widgets/tram/interfaces/dvb.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IMode",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/widgets/tram/interfaces/dvb.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IMonitor",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/widgets/tram/interfaces/dvb.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IPlatform",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/widgets/tram/interfaces/dvb.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Stop",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/widgets/tram/tram.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TramComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/widgets/weather/services/weather.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "WeatherService",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/widgets/weather/weather.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "WeatherComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.default.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.default.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environmentDefault",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/clock.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Afternoon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/clock.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Morning",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/clock.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Running",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/clock.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/stock.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "AppleAndMicrosoft",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/stock.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/traum.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "stops",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/traum.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/traum.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Tram",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/weather.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Animated",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/weather.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Stay",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/weather.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/widgetmonitor.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "dashboard",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/widgetmonitor.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}